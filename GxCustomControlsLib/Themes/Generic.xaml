<ResourceDictionary
    x:Class="GXWPFControlsLib.Generic"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Gestionix.POS"    
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/GxWPFControlsLib;component/Themes/Icons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/GxWPFControlsLib;component/Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    
    <Style x:Key="HintTextBoxBaseStyle" TargetType="{x:Type local:HintTextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="BorderBrush" Value="Black"/>        
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HintTextBox}">
                    <Border Name="PART_Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Border.Background>
                            <VisualBrush x:Name="CueBannerBrush" AlignmentX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HintTextHorizontalAligment}" 
                                         AlignmentY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HintTextVerticalAligment}" Stretch="None">
                                <VisualBrush.Visual>
                                    <Border Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=TextBox}}"
                                            Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=TextBox}}"
                                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}">
                                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HintText}" Padding="7,5"
                                                   Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HintTextBrush}"
                                                   VerticalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalContentAlignment}" />
                                    </Border>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Border.Background>
                        
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text.IsEmpty}" Value="False">
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                        </DataTrigger>                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="PART_Border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource Blue3}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource Blue4}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:HintTextBox}" BasedOn="{StaticResource HintTextBoxBaseStyle}"/>

    <Style TargetType="{x:Type local:HintPasswordBox}" >
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HintPasswordBox}">
                    <Border Name="PART_Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="White" Padding="5" >
                        <Grid>
                            <TextBlock Name="PART_Watermark" Text="{TemplateBinding HintText}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="LightGray" Margin="3,0" TextTrimming="CharacterEllipsis"/>
                            <PasswordBox Name="PART_Writeable" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" VerticalAlignment="Stretch" Background="Transparent" Margin="0" 
                                         BorderThickness="0"    
                                         local:PasswordHelper.Attach="True"
                                         local:PasswordHelper.Password="{Binding Text,
                                                                         Mode=TwoWay, 
                                                                         UpdateSourceTrigger=PropertyChanged,
                                                                         RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Text.IsEmpty, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter TargetName="PART_Watermark" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_Writeable" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_Writeable}" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="PART_Border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource Blue3}"/>
                        </Trigger>
                        <Trigger SourceName="PART_Writeable" Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource Blue4}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:HintNumericBox}" BasedOn="{StaticResource HintTextBoxBaseStyle}" />

    <Style TargetType="{x:Type local:HintCurrencyBox}" BasedOn="{StaticResource HintTextBoxBaseStyle}" />
       
    <Style TargetType="{x:Type local:HintPercentageBox}" BasedOn="{StaticResource HintTextBoxBaseStyle}" />

    <Style TargetType="{x:Type local:HintSearchBox}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HintSearchBox}">
                    <Border Name="PART_Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Padding="5" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.Resources>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="IsTabStop" Value="False" />
                                    <Setter Property="Grid.Column" Value="1" />                                    
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Cursor" Value="Hand" />
                                </Style>
                            </Grid.Resources>

                            <local:HintTextBox Grid.Column="0" Name="PART_Writeable" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0"                                               
                                               Background="{TemplateBinding Background}"
                                               Text="{Binding Text,
                                                Mode=TwoWay,                                 
                                                UpdateSourceTrigger=PropertyChanged,  
                                                RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}"                                                
                                                BorderThickness="0"
                                                HintText="{TemplateBinding HintText}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                                        
                            <Button Name="PART_PrimaryIcon">
                                <Button.Content>
                                    <ContentControl Template="{StaticResource MagnifyingGlassTemplateIcon}" IsTabStop="False"/>
                                </Button.Content>    
                            </Button>
                            <Button Name="PART_SecundaryIcon">
                                <Button.Content>
                                    <ContentControl Template="{StaticResource CrossTemplateIcon}" IsTabStop="False"/>
                                </Button.Content>
                            </Button>            
                            <local:ProgressRing Name="PART_SearchingIndicator" Grid.Column="1" IsTabStop="False"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Text.IsEmpty, RelativeSource={RelativeSource Self}}" Value="False">                            
                            <Setter TargetName="PART_SecundaryIcon" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_PrimaryIcon" Property="Visibility" Value="Hidden" />                            
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text.IsEmpty, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_PrimaryIcon" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_SecundaryIcon" Property="Visibility" Value="Hidden" />                            
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_Writeable" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_Writeable}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSearching, RelativeSource={RelativeSource Self}}" Value="True">                            
                            <Setter TargetName="PART_SecundaryIcon" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_PrimaryIcon" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_SearchingIndicator" Property="IsActivated" Value="True" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="PART_Border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource Blue3}"/>
                        </Trigger>
                        <Trigger SourceName="PART_Writeable" Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource Blue4}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:HintComboBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTextSearchEnabled" Value="False"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                    <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Themes:SystemDropShadowChrome>
                            </Popup>
                            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="ClickMode" Value="Press"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border x:Name="templateRoot" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Padding="7">
                                                        <ContentControl x:Name="Arrow" HorizontalAlignment="Right" VerticalAlignment="Center" Template="{StaticResource DownArrowTemplateIcon}" SnapsToDevicePixels="True" IsTabStop="False"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" TargetName="templateRoot" Value="LightBlue"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="IsTextSearchEnabled" Value="{Binding IsTextSearchEnabled}"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                        <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                            <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                <ScrollViewer x:Name="DropDownScrollViewer">
                                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </Grid>
                                                </ScrollViewer>
                                            </Border>
                                        </Themes:SystemDropShadowChrome>
                                    </Popup>
                                    <ToggleButton x:Name="PART_ToggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" 
                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding Background}">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="IsTabStop" Value="True"/>
                                                <Setter Property="Focusable" Value="True"/>
                                                <Setter Property="ClickMode" Value="Press"/>
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Border x:Name="templateRoot" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Padding="7" BorderThickness="0">
                                                                <ContentControl x:Name="Arrow" HorizontalAlignment="Right" VerticalAlignment="Center" Template="{StaticResource DownArrowTemplateIcon}" SnapsToDevicePixels="True" IsTabStop="False"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" TargetName="templateRoot" Value="LightBlue"/>
                                                                </Trigger>
                                                                <Trigger Property="IsFocused" Value="True">
                                                                    <Setter Property="Background" TargetName="templateRoot" Value="LightBlue"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Border x:Name="Border" Background="{TemplateBinding Background}" Margin="0">
                                        <local:HintTextBox x:Name="PART_EditableTextBox" Background="{TemplateBinding Background}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                           HintText="{Binding HintText, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0">
                                        </local:HintTextBox>
                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="True"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </MultiTrigger>
                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="PART_Border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource Blue3}"/>
                                </Trigger>
                                <Trigger SourceName="PART_EditableTextBox" Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource Blue4}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--INPUT TEXT END-->

    <!--BUTTONS-->
    <Style TargetType="{x:Type local:StatesButton}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="LightGray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:StatesButton}">
                    <Grid>
                        <local:ProgressRing Name="PART_Loading" Panel.ZIndex="2" IsActivated="False" Visibility="Collapsed" HorizontalAlignment="Center"/>
                        <ContentControl Panel.ZIndex="1" Name="PART_LockedIcon" Template="{StaticResource PadLockIcon}" HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="Collapsed" Height="35" Width="35"/>
                        <Border Panel.ZIndex="0" Name="PART_Background" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="0">
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0.7" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0.5" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsLocked" Value="True"/>
                                <Condition Property="IsBusy" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_LockedIcon" Property="Visibility" Value="Visible"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    <!--END BUTTONS-->
    
    <!-- ANIMATED -->   
    <Style TargetType="{x:Type local:ProgressRing}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ProgressRing}">
                    <Viewbox Stretch="Uniform">
                        <Canvas x:Name="PART_Container" Width="50" Height="50"/>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ANIMATED END -->    
</ResourceDictionary>
